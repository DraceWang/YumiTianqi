package com.boyumi.yumitianqi;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.res.XmlResourceParser;
import android.widget.Toast;

public class YahooWeather {

	private String CityCode;
	private String WeatherCondition;
	private String Temperature;
	private String Date = null;
	private String CityName;
	private int WeatherCode;
	private List<Map<String, Object>> forcastlist = new ArrayList<Map<String, Object>>();

	// get weather from yahoo
	@SuppressLint("ShowToast")
	public void getWeather(Context context, String CityName) {
		if (CityName == null) {
			CityName = null;
			Temperature = "¡ª¡ª ¡ª¡ª" + "\u2103";
			WeatherCode = 99;
			System.out.println("error:" + "ÕâÀïÓ¦¸Ã³öÈ¥ÁË");
			return;
		}
		CityCode = getcitycode(context, "cityCode.txt", CityName);
		System.out.println("Yahoo_citycode:" + CityCode);
		final String temp_url = "http://weather.yahooapis.com/forecastrss?w="
				+ CityCode + "&u=c";
		Thread gw = new Thread() {
			@Override
			public void run() {
				// TODO Auto-generated method stub
				super.run();
				try {
					URLConnection con = (URLConnection) (new URL(temp_url))
							.openConnection();
					con.setRequestProperty("accept", "*/*");
					con.setRequestProperty("connection", "Keep-Alive");
					con.setRequestProperty("user-agent",
							"Mozilla/4.0(compatible;MSIE 6.0;Windows NT 5.1;SV1)");
					con.connect();
					System.out.println("connected");
					XmlPullParser parser = XmlPullParserFactory.newInstance()
							.newPullParser();
					parser.setInput(new InputStreamReader(con.getInputStream()));

					while (parser.getEventType() != XmlResourceParser.END_DOCUMENT) {
						if (parser.getEventType() == XmlResourceParser.START_TAG) {
							String tagName = parser.getName();

							if (tagName.equals("yweather:condition")) {
								System.out.println("pulling the weatherIfno");
								// WeatherCondition = parser.getAttributeValue(
								// null, "text");
								Temperature = parser.getAttributeValue(null,
										"temp");
								Temperature += ("\u2103");
								WeatherCode = Integer.valueOf(parser
										.getAttributeValue(null, "code"));
								Date = parser.getAttributeValue(null, "date");
							}

							// forcast
							for (int i = 1; i < 6; i++) {
								if (tagName.equals("yweather:forecast")) {
											String day = changdaydisplay(parser
													.getAttributeValue(null,
															"day"));
											String weather = weathercodedisplay(Integer.valueOf(parser.getAttributeValue(null,
													"code")));
											String temprang = parser.getAttributeValue(null,
													"low")
													+ "-"
													+ parser.getAttributeValue(
															null, "high") ;
									Map<String, Object> listItem = new HashMap<String, Object>();
									listItem.put("day",day);
									listItem.put("weather",weather);
									listItem.put("temprang",temprang);
									forcastlist.add(listItem);
									System.out.println(forcastlist.get(i-1).toString());
								}
							}

						}
						parser.next();
					}

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		};
		gw.start();
		try {
			gw.join();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if (Date == null) {
			Toast.makeText(context, "ÎÞ·¨»ñÈ¡ÍøÂçÌìÆø", 5000);
		return;
		}
		System.out.println("pulling Weather -----Done");
	}

	public String getcitycode(Context context, String fileName, String cn) {
		try {
			InputStream in = context.getResources().getAssets().open(fileName);
			InputStreamReader read = new InputStreamReader(in, "UTF-8");
			BufferedReader br = new BufferedReader(read);
			String tempLine;
			while ((tempLine = br.readLine()) != null) {
				String[] tmpC = tempLine.split("\\|");
				String[] tmpcn = tmpC[0].split(";");
				if (cn.equals(tmpcn[0]) | cn.equals(tmpcn[1])) {
					String citycode = tmpC[1];
					CityName = tmpcn[0];
					System.out.println("CityCode find it!-----" + citycode);
					return citycode;
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

//	public String changdaydisplay(String day) {
//		switch (day) {
//		case "Mon":
//			return "ÐÇÆÚÒ»";
//		case "Tue":
//			return "ÐÇÆÚ¶þ";
//		case "Wed":
//			return "ÐÇÆÚÈý";
//		case "Thu":
//			return "ÐÇÆÚËÄ";
//		case "Fri":
//			return "ÐÇÆÚÎå";
//		case "Sat":
//			return "ÐÇÆÚÁù";
//		case "Sun":
//			return "ÐÇÆÚÌì";
//		default:
//			return null;
//		}
//	}

	public String weathercodedisplay(int WeatherCode) {
		switch (WeatherCode) {
		case 0:
		case 1:
		case 2:
			return "·ç±©";
		case 3:
		case 4:
		case 37:
		case 38:
		case 39:
		case 45:
		case 46:
		case 47:
			return "À×ÕóÓê";
		case 5:
		case 6:
		case 7:
		case 35:
		case 17:
			return  "Óê¼ÐÑ©";
		case 8:
		case 9:
		case 10:
		case 11:
		case 12:
		case 18:
		case 40:
			return "ÕóÓê";
		case 13:
		case 14:
		case 15:
		case 16:
		case 41:
		case 42:
		case 43:
			return  "Ñ©";
		case 19:
		case 20:
		case 22:
			return "Îí";
		case 23:
		case 24:
		case 25:
			return "·ç";
		case 26:
		case 27:
		case 29:
		case 30:
		case 44:
			return"¾Ö²¿¶àÔÆ";
		case 31:
		case 32:
		case 33:
		case 34:
		case 36:
		case 28:
		case 21:
			return "Çç";
		default:
			return null;
		}
	}
}
